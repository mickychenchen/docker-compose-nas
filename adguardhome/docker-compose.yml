services:
  dhcp-relay:
    image: modem7/dhcprelay:latest
    container_name: dhcp-relay
    restart: always
    depends_on:
      adguardhome:
        condition: service_healthy
    command: ["-id", "enp2s0", "-iu", "br_adguard", "10.0.0.10"]
    cap_add:
      - NET_ADMIN
    network_mode: host
    mem_reservation: 6m
    profiles:
      - adguardhome-dhcp

  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          "ip addr show | grep -F '10.0.0.10' >/dev/null && wget -qO /dev/null http://127.0.0.1:3000",
        ]
      interval: 1m
      retries: 10
      start_period: 30s
    networks:
      adguardhome:
        ipv4_address: 10.0.0.10
      default:
    ports:
      - "${TAILSCALE_IP}:3000:3000"  #bind tailscale ip for LAN only
      - "53:53/tcp"
      - "53:53/udp"
      - "68:68/tcp"
      - "68:68/udp"
      - "853:853/tcp"
    volumes:
      - ./adguardhome/work:/opt/adguardhome/work
      - ./adguardhome/conf:/opt/adguardhome/conf
      - ./adguardhome/certs:/opt/adguardhome/certs
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=docker-compose-nas"
      - "traefik.http.services.adguardhome.loadbalancer.server.port=3000"
      - "traefik.http.routers.adguardhome.rule=(Host(`${ADGUARD_HOSTNAME}`))"
      - "traefik.http.routers.adguardhome.tls=true"
      - "traefik.http.routers.adguardhome.tls.certresolver=myresolver"
      - "traefik.http.routers.adguardhome.service=adguardhome"
      # ---- DoH ----
      - "traefik.http.routers.adguard-doh.rule=Host(`${ADGUARD_HOSTNAME}`) && PathPrefix(`/dns-query`)"
      - "traefik.http.routers.adguard-doh.tls=true"
      - "traefik.http.routers.adguard-doh.tls.certresolver=myresolver"
      - "traefik.http.routers.adguard-doh.service=adguard-doh"
      - "traefik.http.services.adguard-doh.loadbalancer.server.port=3000"
      # ---- whitelisted IP of tailscale subnets ----
      - "traefik.http.routers.adguardhome.middlewares=adguardhome-ipwhitelist"
      - "traefik.http.middlewares.adguardhome-ipwhitelist.ipwhitelist.sourcerange=100.64.0.0/10"
      - homepage.group=Utilities
      - homepage.name=Adguard
      - homepage.icon=adguard-home.png
      - homepage.href=https://${ADGUARD_HOSTNAME}
      - homepage.description=DNS Adblocker
      - homepage.weight=0
      - homepage.widget.type=adguard
      - homepage.widget.url=http://adguardhome:3000
      - homepage.widget.username=${ADGUARD_USERNAME}
      - homepage.widget.password=${ADGUARD_PASSWORD}
    profiles:
      - adguardhome

  traefik-certs-dumper:
    image: ghcr.io/ldez/traefik-certs-dumper:latest
    container_name: traefik-certs-dumper
    restart: always
    entrypoint: sh -c '
      apk add jq
      ; while ! [ -e /data/acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --watch
      --clean false
      --source /data/acme.json --dest /certs'
    volumes:
      - ./letsencrypt:/data
      - ./adguardhome/certs:/certs
    profiles:
      - adguardhome

networks:
  adguardhome:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_adguard
    ipam:
      config:
        - subnet: 10.0.0.0/24
